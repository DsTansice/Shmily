import{_ as s}from"./chunks/open_cmd.sSnH096g.js";import{_ as i,c as a,o as e,R as n}from"./chunks/framework.6Zk1sI6T.js";const l="/Shmily/assets/node-dependencies.Clor6cih.png",_=JSON.parse('{"title":"开始 Nodejs 项目","description":"","frontmatter":{},"headers":[],"relativePath":"guide/setup-runtime/nodejs.md","filePath":"guide/setup-runtime/nodejs.md","lastUpdated":1700898538000}'),t={name:"guide/setup-runtime/nodejs.md"},o=n('<h1 id="开始-nodejs-项目" tabindex="-1">开始 Nodejs 项目 <a class="header-anchor" href="#开始-nodejs-项目" aria-label="Permalink to &quot;开始 Nodejs 项目&quot;">​</a></h1><h2 id="_1-安装-nodejs" tabindex="-1">1. 安装 nodejs <a class="header-anchor" href="#_1-安装-nodejs" aria-label="Permalink to &quot;1. 安装 nodejs&quot;">​</a></h2><ul><li>查看 <code>package.json</code> 中 <code>engines</code> 字段获取项目所需 <code>nodejs</code> 版本 <ul><li>如果没有 <code>engines</code> 字段，从官网 <code>https://nodejs.org/</code> 下载 <code>LTS</code> 版本</li></ul></li><li>从 <code>https://nodejs.org/dist/</code> 下载相应版本的 <code>nodejs</code><ul><li>Windows 平台注意事项 <ul><li>请下载 <code>.msi</code> 后缀的标准安装程序(如 <code>node-v99.99.9-x64.msi</code>), 以下均不推荐 <ul><li><code>node-v99.9.9-win-x64.7z / node-v99.9.9-win-x64.zip</code> 为绿色版, 需要自己配置 <code>Path</code> 环境变量</li><li><code>./win-x64/node.exe</code> 为绿色单文件</li></ul></li></ul></li></ul></li><li>安装过程，选项全部默认</li></ul><h2 id="_2-安装项目依赖" tabindex="-1">2. 安装项目依赖 <a class="header-anchor" href="#_2-安装项目依赖" aria-label="Permalink to &quot;2. 安装项目依赖&quot;">​</a></h2><p>下面提供 <code>从项目下载</code> 和 <code>从本地安装</code> 两种方式, 二选一即可</p><h3 id="_2-1-从项目下载-建议" tabindex="-1">2.1 从项目下载 (建议) <a class="header-anchor" href="#_2-1-从项目下载-建议" aria-label="Permalink to &quot;2.1 从项目下载 (建议)&quot;">​</a></h3><details><p><img src="'+l+`" alt="从项目下载依赖"></p><p>可以查看项目是否有 <code>node_modules</code> 分支, 如果有, 可以直接下载其中的压缩包并解压到项目目录</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// 解压后项目文件夹结构</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-\\</span></span>
<span class="line"><span>  - node_modules</span></span>
<span class="line"><span>    - .bin</span></span>
<span class="line"><span>    - ...</span></span>
<span class="line"><span>  - package.json</span></span>
<span class="line"><span>  - README.md</span></span>
<span class="line"><span>  - ...</span></span></code></pre></div></details><h3 id="_2-2-从本地安装" tabindex="-1">2.2 从本地安装 <a class="header-anchor" href="#_2-2-从本地安装" aria-label="Permalink to &quot;2.2 从本地安装&quot;">​</a></h3><details><ul><li><p>命令行打开项目目录</p><ul><li>Windows 用户在地址栏输入 cmd 回车即可打开当前目录命令行 <img src="`+s+`" alt="open cmd"></li></ul></li><li><p>执行命令安装依赖</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span></code></pre></div></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果安装以来过程中大量报错，特别是有 <code>node-gyp</code> 字样的，建议使用 [2.1 从项目下载] 的方式解决</p><p>其他的参考报错提示处理</p></div></details><h2 id="_3-启动程序" tabindex="-1">3. 启动程序 <a class="header-anchor" href="#_3-启动程序" aria-label="Permalink to &quot;3. 启动程序&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>项目启动方式并不唯一, 下面为常用的项目启动方式, 仅供参考</p></div><ul><li><p>按照项目说明启动程序</p></li><li><p>若项目无说明, 从 <code>package.json</code> 文件中的 <code>scripts</code> 字段获取执行脚本名称, 通过 <code>npm run {script}</code> 启动程序</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress dev docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress build docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;serve&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress serve docs&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>若 <code>script</code> 中有多个脚本名称(如上图), 一般来说，<code>build</code> 代表生产(正式)，<code>dev</code> 代表测试, 执行 <code>npm run build</code> 即可</p></div></li><li><p>若项目 <code>package.json</code> 中没有 <code>script</code> 字段, 则大多数情况下, <code>index.js</code> 为入口文件</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.js</span></span></code></pre></div></li></ul>`,12),p=[o];function d(c,h,r,k,u,g){return e(),a("div",null,p)}const b=i(t,[["render",d]]);export{_ as __pageData,b as default};
