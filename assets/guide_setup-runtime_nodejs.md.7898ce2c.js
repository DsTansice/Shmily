import{_ as s}from"./chunks/open_cmd.52acdeda.js";import{_ as o,o as a,c as e,Q as n}from"./chunks/framework.19f3d494.js";const _=JSON.parse('{"title":"开始 Nodejs 项目","description":"","frontmatter":{},"headers":[],"relativePath":"guide/setup-runtime/nodejs.md","filePath":"guide/setup-runtime/nodejs.md","lastUpdated":1694598845000}'),l={name:"guide/setup-runtime/nodejs.md"},p=n('<h1 id="开始-nodejs-项目" tabindex="-1">开始 Nodejs 项目 <a class="header-anchor" href="#开始-nodejs-项目" aria-label="Permalink to &quot;开始 Nodejs 项目&quot;">​</a></h1><h2 id="_1-安装-nodejs" tabindex="-1">1. 安装 nodejs <a class="header-anchor" href="#_1-安装-nodejs" aria-label="Permalink to &quot;1. 安装 nodejs&quot;">​</a></h2><ul><li>查看 <code>package.json</code> 中 <code>engines</code> 字段获取项目所需 <code>nodejs</code> 版本</li><li>从 <code>https://nodejs.org/dist/</code> 下载相应版本的 <code>nodejs</code><ul><li>如果没有 <code>engines</code> 字段，从官网 <code>https://nodejs.org/</code> 下载 <code>LTS</code> 版本</li></ul></li><li>安装过程，选项全部默认</li></ul><h2 id="_2-安装项目依赖" tabindex="-1">2. 安装项目依赖 <a class="header-anchor" href="#_2-安装项目依赖" aria-label="Permalink to &quot;2. 安装项目依赖&quot;">​</a></h2><ul><li><p>命令行打开项目目录</p><ul><li>Windows 用户在地址栏输入 cmd 回车即可打开当前目录命令行 <img src="'+s+`" alt="open cmd"></li></ul></li><li><p>执行命令安装依赖</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span></span></code></pre></div></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果安装以来过程中大量报错，特别是有 <code>node-gyp</code> 字样的，可以查看项目是否有 <code>node_modules</code> 分支, 如果有可以解压到项目目录 <code>.\\node_modules</code> 下， 可以解决依赖问题</p><p>其他的参考报错提示处理</p></div><h2 id="_3-启动程序" tabindex="-1">3. 启动程序 <a class="header-anchor" href="#_3-启动程序" aria-label="Permalink to &quot;3. 启动程序&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>项目启动方式并不唯一, 下面为常用的项目启动方式, 仅供参考</p></div><ul><li><p>按照项目说明启动程序</p></li><li><p>若项目无说明, 从 <code>package.json</code> 文件中的 <code>scripts</code> 字段获取执行脚本名称, 通过 <code>npm run {script}</code> 启动程序</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;dev&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vitepress dev docs&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;build&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vitepress build docs&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;serve&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vitepress serve docs&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">...</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;dev&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vitepress dev docs&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;build&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vitepress build docs&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;serve&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vitepress serve docs&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>若 <code>script</code> 中有多个脚本名称(如上图), 一般来说，<code>build</code> 代表生产(正式)，<code>dev</code> 代表测试, 执行 <code>npm run build</code> 即可</p></div></li><li><p>若项目 <code>package.json</code> 中没有 <code>script</code> 字段, 则大多数情况下, <code>index.js</code> 为入口文件</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.js</span></span></code></pre></div></li></ul>`,9),c=[p];function t(i,d,r,u,E,y){return a(),e("div",null,c)}const m=o(l,[["render",t]]);export{_ as __pageData,m as default};
