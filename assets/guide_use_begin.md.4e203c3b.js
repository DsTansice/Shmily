import{_ as e,c as a,o,Q as t}from"./chunks/framework.93a61f05.js";const r="/Shmily/assets/down_repo.b4697182.png",h="/Shmily/assets/what-languages.f969dab5.png",g=JSON.parse('{"title":"开始吧","description":"","frontmatter":{},"headers":[],"relativePath":"guide/use/begin.md","filePath":"guide/use/begin.md","lastUpdated":1700308839000}'),i={name:"guide/use/begin.md"},d=t('<h1 id="开始吧" tabindex="-1">开始吧 <a class="header-anchor" href="#开始吧" aria-label="Permalink to &quot;开始吧&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>对于用户来说, 希望一个软件足够简单,打开一个窗口,点击一个按钮, 就可以得到最终的 <code>结果</code> . 这称为黑盒, 所有的事情都被这个按钮挡住的了,不利于 debug 与 程序的解耦.</p><p>若有些人只希望导出 MobileQQ 的数据做一个自己的 Ai 机器人 ,并不需要<code>Show(展示数据)</code>. 如果按照以上的设计,他还需要从上述按钮获取的展示 <code>结果</code> 逆向为数据.</p><p>所以 Shmily 的使用是在 <code>程序解耦</code> 与 <code>使用便利</code> 之间取舍. 我希望 Shmily 对于不懂编程的人能简单使用, 同时也能足够解耦拆分足够细, 不让开发者 <a href="https://baike.baidu.com/item/%E9%87%8D%E9%80%A0%E8%BD%AE%E5%AD%90/16837040" target="_blank" rel="noreferrer">重造轮子</a>, 中间的纽带就是文档了.</p><p>因为我自身是 Shimly 的开发者,很容易一叶障目, 所以我也很希望你们从各种角度对文档提出各方面的问题来完善文档. 欢迎 <a href="https://github.com/lqzhgood/Shmily/issues/new" target="_blank" rel="noreferrer">提出建议</a></p><p>基于以上 Shmily 的使用会被拆分为很多个步骤, 而且没有 GUI 界面, 这会让人看起来感觉很复杂, 但我保证, <b>每个步骤基本都是拷贝文件, 执行一行命令 完了~</b> 别担心~</p><h2 id="大致步骤" tabindex="-1">大致步骤 <a class="header-anchor" href="#大致步骤" aria-label="Permalink to &quot;大致步骤&quot;">​</a></h2><p><code>Get(获取数据)</code> ---&gt; <code>Merger(合并数据)</code> ---&gt; <code>Show(展示数据)</code></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>大多数情况下 <code>Merger(合并数据)</code> 可以跳过</p></div><h2 id="开始项目" tabindex="-1">开始项目 <a class="header-anchor" href="#开始项目" aria-label="Permalink to &quot;开始项目&quot;">​</a></h2><p>大部分项目并不会打包为开箱即用的 <code>&quot;exe&quot;</code>, 如果您非程序员, 请按以下步骤操作</p><h3 id="_1-下载项目" tabindex="-1">1. 下载项目 <a class="header-anchor" href="#_1-下载项目" aria-label="Permalink to &quot;1. 下载项目&quot;">​</a></h3><p>Github 为例, 点击下图中 <code>Download ZIP</code> 即可下载当前项目源码 <img src="'+r+'" alt="down repo"></p><h3 id="_2-安装项目运行时环境" tabindex="-1">2. 安装项目运行时环境 <a class="header-anchor" href="#_2-安装项目运行时环境" aria-label="Permalink to &quot;2. 安装项目运行时环境&quot;">​</a></h3><p>根据不同的项目语言安装不同的运行时环境, <code>Github</code> 会自动标注主要语言 <img src="'+h+'" alt="what-languages"></p><p>也可以按照下面列出的特性, 安装对应语言的运行时</p><ul><li><p><a href="./../setup-runtime/nodejs.html">nodejs</a> (项目中有 <code>package.json</code> 文件)</p></li><li><p><a href="./../setup-runtime/python.html">python</a> (大量 <code>.py</code> 后缀文件)</p></li><li><p><a href="./../setup-runtime/java.html">java</a> (大量 <code>.java</code> 后缀文件)</p></li></ul><h3 id="_3-get-获取数据" tabindex="-1">3. Get-获取数据 <a class="header-anchor" href="#_3-get-获取数据" aria-label="Permalink to &quot;3. Get-获取数据&quot;">​</a></h3><p><a href="./get.html">参考 Get 文档</a></p><h3 id="_4-merger-合并数据-可选" tabindex="-1">4. Merger-合并数据 (可选) <a class="header-anchor" href="#_4-merger-合并数据-可选" aria-label="Permalink to &quot;4. Merger-合并数据 (可选)&quot;">​</a></h3><p><a href="./merger.html">参考 Merger 文档</a></p><h3 id="_5-show-展示数据" tabindex="-1">5. Show-展示数据 <a class="header-anchor" href="#_5-show-展示数据" aria-label="Permalink to &quot;5. Show-展示数据&quot;">​</a></h3><p><a href="./show.html">参考 Show 文档</a></p>',24),l=[d];function c(s,n,p,u,m,_){return o(),a("div",null,l)}const f=e(i,[["render",c]]);export{g as __pageData,f as default};
